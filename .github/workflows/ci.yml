name: Continuous Integration

on: [push]

jobs:

  dist:
    name: Make distribution using Dist::Inkt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Perl Version
        run: |
          perl -V
      - name: Install cpanm
        run: |
          curl -L https://cpanmin.us | perl - --sudo App::cpanminus
      - name: Install local::lib
        run: |
          cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
      - name: Install Dist::Inkt
        shell: bash
        run: |
          eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          cpanm -n Dist::Inkt::Profile::TOBYINK
      - name: Make distribution
        shell: bash
        run: |
          eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          ~/perl5/bin/distinkt-dist --TRAVIS --targetdir=build
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            build

  test:
    name: ${{ matrix.joblabel }}Perl ${{ matrix.perl }} on ${{ matrix.os }}
    needs: dist
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
        perl: [ '5.8', '5.30' ]
        exclude:
           - os: windows-latest
             perl: '5.8'
        include:
           - os: ubuntu-latest
             perl: '5.30'
             coverage: true
             joblabel: 'Coverage: '
    steps:
      - name: Get dist artifact
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Set up perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl }}
      - name: Configure
        run: perl Makefile.PL
      - name: Install dependencies
        run: cpanm -n --installdeps --with-recommends --with-suggests .
      - name: Make
        run: make
      - name: Test (without coverage)
        if: ${{ !matrix.coverage }}
        env:
          EXTENDED_TESTING: 1
        run: |
          prove -b -r "t"
      - name: Install dependencies for coverage reports
        if: ${{ matrix.coverage }}
        run: |
          cpanm -n Devel::Cover
          cpanm -n Devel::Cover::Report::Coveralls
          cpanm -n Devel::Cover::Report::Codecov
      - name: Clean coverage data
        if: ${{ matrix.coverage }}
        run: cover -delete
      - name: Test (with coverage)
        if: ${{ matrix.coverage }}
        env:
          EXTENDED_TESTING: 1
          HARNESS_PERL_SWITCHES: -MDevel::Cover
        run: |
          prove -b -r "t"
      - name: Coveralls.io report
        if: ${{ matrix.coverage }}
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: |
          cover -report coveralls
      - name: Codecov.io report
        if: ${{ matrix.coverage }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          cover -report codecov
